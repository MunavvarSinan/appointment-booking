window.BookingWidget = {
    options: { apiUrl: "http://localhost:8000/api/v1/appointments", containerId: "appointment-booking-widget", primaryColor: "#3b82f6" }, init: function (e = {}) { this.options = { ...this.options, ...e }; let t = document.getElementById(this.options.containerId); t || ((t = document.createElement("div")).id = this.options.containerId, document.body.appendChild(t)), this.injectStyles(), this.renderHTML(t), this.initializeEventListeners() }, injectStyles: function () {
        let e = document.createElement("style"); e.textContent = `
        /* All your CSS goes here */
        :root {
          --primary-color: ${this.options.primaryColor};
          --primary-hover: #2563eb;
          --error-color: #ef4444;
          --success-color: #10b981;
          --border-color: #e5e7eb;
          --bg-color: #f9fafb;
          --text-color: #1f2937;
        }
        
        #${this.options.containerId} * {
          box-sizing: border-box;
          margin: 0;
          padding: 0;
          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        #${this.options.containerId} .booking-container {
          max-width: 600px;
          margin: 0 auto;
          background-color: white;
          border-radius: 12px;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          overflow: hidden;
        }
        
        #${this.options.containerId} .booking-header {
          background-color: var(--primary-color);
          color: white;
          padding: 20px;
          text-align: center;
        }
        
        #${this.options.containerId} .booking-form {
          padding: 20px;
        }
        
        #${this.options.containerId} .form-group {
          margin-bottom: 20px;
        }
        
        #${this.options.containerId} .form-group label {
          display: block;
          font-weight: 600;
          margin-bottom: 8px;
          color: var(--text-color);
        }
        
        #${this.options.containerId} .form-control {
          width: 100%;
          padding: 12px;
          border: 1px solid var(--border-color);
          border-radius: 6px;
          font-size: 16px;
          transition: border-color 0.3s;
        }
        
        #${this.options.containerId} .form-control:focus {
          border-color: var(--primary-color);
          outline: none;
          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
        }
        
        #${this.options.containerId} .error-message {
          color: var(--error-color);
          font-size: 14px;
          margin-top: 5px;
          display: none;
        }
        
        #${this.options.containerId} .error .form-control {
          border-color: var(--error-color);
        }
        
        #${this.options.containerId} .error .error-message {
          display: block;
        }
        
        #${this.options.containerId} .time-slots-grid {
          display: grid;
          grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
          gap: 10px;
          margin-top: 10px;
          margin-bottom: 20px;
        }
        
        #${this.options.containerId} .time-slot {
          padding: 10px;
          text-align: center;
          border: 1px solid var(--border-color);
          border-radius: 6px;
          cursor: pointer;
          transition: all 0.2s;
        }
        
        #${this.options.containerId} .time-slot:hover {
          border-color: var(--primary-color);
          background-color: rgba(59, 130, 246, 0.1);
        }
        
        #${this.options.containerId} .time-slot.selected {
          background-color: var(--primary-color);
          color: white;
          border-color: var(--primary-color);
        }
        
        #${this.options.containerId} .time-slot.disabled {
          opacity: 0.5;
          cursor: not-allowed;
          background-color: #f3f4f6;
        }
        
        #${this.options.containerId} .booking-btn {
          width: 100%;
          padding: 12px;
          background-color: var(--primary-color);
          color: white;
          border: none;
          border-radius: 6px;
          font-size: 16px;
          font-weight: 600;
          cursor: pointer;
          transition: background-color 0.3s;
        }
        
        #${this.options.containerId} .booking-btn:hover {
          background-color: var(--primary-hover);
        }
        
        #${this.options.containerId} .booking-btn:disabled {
          opacity: 0.7;
          cursor: not-allowed;
        }
        
        #${this.options.containerId} .success-message {
          padding: 15px;
          background-color: rgba(16, 185, 129, 0.1);
          border: 1px solid var(--success-color);
          border-radius: 6px;
          color: var(--success-color);
          margin-top: 15px;
          text-align: center;
          display: none;
        }
        
        #${this.options.containerId} .loading {
          position: relative;
          pointer-events: none;
        }
        
        #${this.options.containerId} .loading:after {
          content: "";
          position: absolute;
          width: 20px;
          height: 20px;
          top: 50%;
          left: 50%;
          margin-top: -10px;
          margin-left: -10px;
          border-radius: 50%;
          border: 3px solid rgba(255, 255, 255, 0.3);
          border-top-color: white;
          animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
          to {
            transform: rotate(360deg);
          }
        }
      `, document.head.appendChild(e)
    }, renderHTML: function (e) {
        e.innerHTML = `
        <div class="booking-container">
          <div class="booking-header">
            <h2>Book Your Appointment</h2>
          </div>
          <div class="booking-form">
            <form id="bookingForm-${this.options.containerId}" novalidate>
              <div class="form-group">
                <label for="name-${this.options.containerId}">Full Name</label>
                <input type="text" id="name-${this.options.containerId}" name="name" class="form-control" placeholder="Enter your full name" required>
                <span class="error-message">Please enter your name</span>
              </div>
              
              <div class="form-group">
                <label for="phoneNumber-${this.options.containerId}">Phone Number</label>
                <input type="tel" id="phoneNumber-${this.options.containerId}" name="phoneNumber" class="form-control" placeholder="Enter your phone number" required>
                <span class="error-message">Please enter a valid phone number</span>
              </div>
              
              <div class="date-selection">
                <div class="form-group">
                  <label for="date-${this.options.containerId}">Select Date</label>
                  <input type="date" id="date-${this.options.containerId}" name="date" class="form-control date-picker" required>
                  <span class="error-message">Please select a date</span>
                </div>
              </div>
              
              <div class="time-slots-container">
                <label>Select Time Slot</label>
                <div class="time-slots-grid" id="timeSlots-${this.options.containerId}">
                  <p id="noSlotsMessage-${this.options.containerId}" style="grid-column: 1 / -1; text-align: center;">Please select a date to view available time slots</p>
                </div>
                <input type="hidden" id="selectedTimeSlot-${this.options.containerId}" name="timeSlot" required>
                <span class="error-message" id="timeSlotError-${this.options.containerId}">Please select a time slot</span>
              </div>
              
              <button type="submit" class="booking-btn" id="submitBtn-${this.options.containerId}">Book Appointment</button>
            </form>
            
            <div class="success-message" id="successMessage-${this.options.containerId}">
              Your appointment has been booked successfully!
            </div>
          </div>
        </div>
      `}, initializeEventListeners: function () { let e = document.getElementById(`bookingForm-${this.options.containerId}`), t = document.getElementById(`date-${this.options.containerId}`); document.getElementById(`timeSlots-${this.options.containerId}`); let o = document.getElementById(`selectedTimeSlot-${this.options.containerId}`), i = document.getElementById(`submitBtn-${this.options.containerId}`), r = document.getElementById(`successMessage-${this.options.containerId}`), n = document.getElementById(`timeSlotError-${this.options.containerId}`), a = new Date, s = a.getFullYear(), l = String(a.getMonth() + 1).padStart(2, "0"), d = String(a.getDate()).padStart(2, "0"), c = `${s}-${l}-${d}`; t.min = c, t.value = c, this.generateTimeSlots(c), t.addEventListener("change", () => { let e = t.value; e && (this.generateTimeSlots(e), o.value = "") }); let p = e.querySelectorAll('input:not([type="hidden"])'); p.forEach(e => { e.addEventListener("blur", () => { this.validateInput(e) }), e.addEventListener("input", () => { e.closest(".form-group").classList.contains("error") && this.validateInput(e) }) }), e.addEventListener("submit", async t => { t.preventDefault(); let a = !0; if (p.forEach(e => { this.validateInput(e) || (a = !1) }), o.value ? n.style.display = "none" : (n.style.display = "block", a = !1), !a) return; i.classList.add("loading"), i.disabled = !0; let s = new FormData(e), l = { name: s.get("name"), phoneNumber: s.get("phoneNumber"), date: s.get("date"), timeSlot: s.get("timeSlot") }; try { await this.createAppointment(l), e.style.display = "none", r.style.display = "block" } catch (d) { alert("Failed to book appointment. Please try again."), console.error(d) } finally { i.classList.remove("loading"), i.disabled = !1 } }) }, async fetchAvailableSlots(e) { let t = await fetch(`${this.options.apiUrl}/slots?date=${e}`); if (!t.ok) throw Error("Failed to fetch available slots"); let o = await t.json(); return o.slots }, async createAppointment(e) { let t = await fetch(`${this.options.apiUrl}/`, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(e) }); if (!t.ok) throw Error("Failed to create appointment"); return t.json() }, async generateTimeSlots(e) { let t = document.getElementById(`timeSlots-${this.options.containerId}`); try { t.innerHTML = '<p style="grid-column: 1 / -1; text-align: center;">Loading available slots...</p>'; let o = await this.fetchAvailableSlots(e); if (t.innerHTML = "", 0 === o.length) { t.innerHTML = '<p style="grid-column: 1 / -1; text-align: center;">No available slots for this date</p>'; return } let i = document.getElementById(`selectedTimeSlot-${this.options.containerId}`); o.forEach(e => { let o = document.createElement("div"); o.className = `time-slot ${e.available ? "" : "disabled"}`, o.textContent = e.time, e.available && o.addEventListener("click", () => { document.querySelectorAll(".time-slot").forEach(e => { e.classList.remove("selected") }), o.classList.add("selected"), i.value = e.time, document.getElementById(`timeSlotError-${this.options.containerId}`).style.display = "none" }), t.appendChild(o) }) } catch (r) { console.error(r), t.innerHTML = '<p style="grid-column: 1 / -1; text-align: center; color: var(--error-color);">Failed to load time slots. Please try again.</p>' } }, validateInput(e) { let t = e.closest(".form-group"), o = t.querySelector(".error-message"), i = !0; return e.required && !e.value.trim() ? (t.classList.add("error"), i = !1) : "tel" === e.type && e.value ? /^\+?[0-9\s\-\(\)]{8,}$/.test(e.value) ? t.classList.remove("error") : (t.classList.add("error"), o.textContent = "Please enter a valid phone number", i = !1) : t.classList.remove("error"), i }
};